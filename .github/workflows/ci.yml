name: CI Pipeline
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
jobs:
  ruff:
    name: Ruff Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install ruff
        run: pip install ruff
      - name: Run ruff check
        run: ruff check src tests
      - name: Run ruff format check
        run: ruff format --check src tests
  mypy:
    name: Type Checking (mypy)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install mypy pandas numpy scikit-learn
      - name: Run mypy
        run: mypy --strict --ignore-missing-imports src
  bandit:
    name: Security Scan (bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install bandit
        run: pip install bandit
      - name: Run bandit
        run: bandit -ll -q -r src
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run unit tests
        run: pytest -q tests/unit
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run integration tests
        run: pytest -q tests/integration
  golden:
    name: Golden File Tests
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run golden tests
        run: pytest -q tests/golden
  determinism:
    name: Determinism Check
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run determinism check
        run: |
          if [ -f src/modeling/determinism_check.py ]; then
            python -m src.modeling.determinism_check --seed 42
          else
            echo "⚠️ Determinism check skipped (module not implemented yet)"
            exit 0
          fi
  metrics:
    name: Metrics Validation
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Validate metrics
        run: |
          if [ ! -f src/eval/validate_metrics.py ]; then
            echo "⚠️ Metrics validation skipped (module not implemented yet)"
            exit 0
          fi
          
          if [ ! -f artifacts/portfolio/perf_metrics.json ]; then
            echo "⚠️ Metrics validation skipped (artifacts/portfolio/perf_metrics.json not found)"
            exit 0
          fi
          
          python -m src.eval.validate_metrics artifacts/portfolio/perf_metrics.json
